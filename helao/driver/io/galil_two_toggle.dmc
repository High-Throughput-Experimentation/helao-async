'To execute programs, download the code into the controller and
'then issue XQ to start executing from the top. Issue XQ #label
'to start executing at a specific label or line number.
'The code will execute until an EN ends the program or subroutine.

#main{mainthread};                  'main program-thread 0
    CB {p_output};CB {p_output_gamry};    'clear output
    AI {p_trigger};       'after input 1 high
    var1 = {f_maxcount}; 'counter variable for toggle loop
    var2 = {f_maxcount2}; 'counter variable for toggle loop
    MG var1; MG var2
    AT 0;               'set reference time

   
    XQ #toggle{subthread}, {subthread};      'execute thread 1
    XQ #toggle{subthread2}, {subthread2};      'execute thread 2
	AI -{p_trigger};      'pause this thread until after input 1 is low

    HX1;HX2                 'halt threads 1&2
    CB {p_output};CB {p_output_gamry};    'clear output
EN; 'end program

' faster when mulitple commands separated by ;
#toggle{subthread};                'toggle routine entry
    var1 = {f_maxcount}; 'counter variable for toggle loop
    AT 0;CB {p_output};
	AT {t_offset}
	IF ( {t_time_off} > 0 );
		#jt{subthread}; ' jump adress for toggle loop
		AT 0;SB {p_output};    ' reset timer and set output 0
		AT {t_time_on};CB {p_output};    'wait xy msec then set output 1
		AT {t_time_off}+{t_time_on};   ' wait more before jumping back
		var1 = var1 - 1;
		IF (var1 = 0);
			EN;
		ENDIF;
		JP #jt{subthread};   ' repeat
	ENDIF;
	SB {p_output};
	IF ( {t_duration} > 0 );
		AT {t_duration};CB {p_output};
	ENDIF;
EN; 'end thread

#toggle{subthread2};                'toggle routine entry
    var2 = {f_maxcount2}; 'counter variable for toggle loop
	AT 0;CB {p_output_gamry};
	AT {t_offset2}
	IF ( {t_time_off2} > 0 );
		#jt{subthread2}; ' jump adress for toggle loop
		AT 0;SB {p_output_gamry};    ' reset timer and set output 0
		AT {t_time_on2};CB {p_output_gamry};    'wait xy msec then set output 1
		AT {t_time_off2}+{t_time_on2};   ' wait more before jumping back
		var2 = var2 - 1;  
		IF (var2 = 0);
			EN;
		ENDIF; 
		JP #jt{subthread2};   ' repeat
	ENDIF;
	SB {p_output_gamry};
	IF ( {t_duration2} > 0 );
		AT {t_duration2};CB {p_output_gamry};
	ENDIF;
EN; 'end thread